.TH "cuvis_export_general_settings_t" 3 "Thu Jun 22 2023" "Version 3.2.0" "CUVIS C++ SDK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cuvis_export_general_settings_t \- general export settings  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <cuvis\&.h>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBCUVIS_CHAR\fP \fBexport_dir\fP [\fBCUVIS_MAXBUF\fP]"
.br
.RI "The export directory\&. "
.ti -1c
.RI "\fBCUVIS_CHAR\fP \fBchannel_selection\fP [\fBCUVIS_MAXBUF\fP]"
.br
.RI "The export channel selection 
.br
 "
.ti -1c
.RI "double \fBspectra_multiplier\fP"
.br
.RI "multiply spectrum by fixed factor before exporting "
.ti -1c
.RI "double \fBpan_scale\fP"
.br
.RI "amount of pan-sharpening "
.ti -1c
.RI "\fBCUVIS_PAN_SHAPRENING_INTERPOLATION_TYPE\fP \fBpan_interpolation_type\fP"
.br
.RI "for pansharpening use this interpolation type to scale up the cube before adjusting the weights "
.ti -1c
.RI "\fBCUVIS_PAN_SHAPRENING_ALGORITHM_TYPE\fP \fBpan_algorithm\fP"
.br
.RI "method for calculating the weights "
.ti -1c
.RI "double \fBblend_opacity\fP"
.br
.RI "opacity for \fBpan_sharpening_algorithm_AlphablendPanOverlay\fP, give a value between 0 and 1 a value of 1\&.0 represents usage of 100% pan image, 0 will be 100% view image "
.ti -1c
.RI "\fBCUVIS_INT\fP \fBadd_pan\fP"
.br
.RI "add pan to exported image\&. "
.ti -1c
.RI "\fBCUVIS_INT\fP \fBadd_fullscale_pan\fP"
.br
.RI "add full-resolution pan to exported image\&. "
.ti -1c
.RI "\fBCUVIS_INT\fP \fBpermissive\fP"
.br
.RI "Set exporter to 'permisive mode'\&. "
.in -1c
.SH "Detailed Description"
.PP 
general export settings 
.SH "Member Data Documentation"
.PP 
.SS "\fBCUVIS_INT\fP cuvis_export_general_settings_t::add_fullscale_pan"

.PP
add full-resolution pan to exported image\&. If applicable, the image is added directly to the output\&. else, the image is stored separately\&. 
.SS "\fBCUVIS_INT\fP cuvis_export_general_settings_t::add_pan"

.PP
add pan to exported image\&. If applicable, the pan image is scaled to target pan-sharpening resolution\&. 
.SS "double cuvis_export_general_settings_t::blend_opacity"

.PP
opacity for \fBpan_sharpening_algorithm_AlphablendPanOverlay\fP, give a value between 0 and 1 a value of 1\&.0 represents usage of 100% pan image, 0 will be 100% view image 
.SS "\fBCUVIS_CHAR\fP cuvis_export_general_settings_t::channel_selection[\fBCUVIS_MAXBUF\fP]"

.PP
The export channel selection 
.br
 Use 'all' or 'full' for all available channels
.PP
Use ranges for wavelength range start-end or start:end or start:step:end ; All values in Nanometers\&. Examples: 450:10:550 or 450-550 
.SS "\fBCUVIS_CHAR\fP cuvis_export_general_settings_t::export_dir[\fBCUVIS_MAXBUF\fP]"

.PP
The export directory\&. 
.SS "\fBCUVIS_PAN_SHAPRENING_ALGORITHM_TYPE\fP cuvis_export_general_settings_t::pan_algorithm"

.PP
method for calculating the weights 
.SS "\fBCUVIS_PAN_SHAPRENING_INTERPOLATION_TYPE\fP cuvis_export_general_settings_t::pan_interpolation_type"

.PP
for pansharpening use this interpolation type to scale up the cube before adjusting the weights As a first step to pan-sharpening the spectral data needs to be re-sanpled to the target resolution This parameter determines the method for this resanpling\&. 
.SS "double cuvis_export_general_settings_t::pan_scale"

.PP
amount of pan-sharpening The value is relative to the pan image size, give a value between 0 and 1 
.SS "\fBCUVIS_INT\fP cuvis_export_general_settings_t::permissive"

.PP
Set exporter to 'permisive mode'\&. If set, errors will be skipped and alternative values assumed, wherever possible\&.
.PP
E\&.g\&., if \fBadd_pan\fP is selected but there is no panchromatic image avaialbe, the export is not possible\&. In permissive mode, however, the add_pan option is de-activated and an exprot without pan image is conducted instead\&.
.PP
\fBNote\fP
.RS 4
This mode may lead to unexpected behaviour and should be used with caution\&. 
.RE
.PP

.SS "double cuvis_export_general_settings_t::spectra_multiplier"

.PP
multiply spectrum by fixed factor before exporting This is most usefull for bitshifting the data - especially when the pan image is also added to the export\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for CUVIS C++ SDK from the source code\&.
