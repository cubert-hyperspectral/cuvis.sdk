.TH "cuvis::common_image_t< data_t >" 3 "Thu Jun 22 2023" "Version 3.2.0" "CUVIS C++ SDK" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cuvis::common_image_t< data_t > \- Metaclass for handling image data (2d or 3d)  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <cuvis\&.hpp>\fP
.PP
Inherited by \fBcuvis::image_t< data_t >\fP, and \fBcuvis::view_t< data_t >\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "data_t const & \fBget\fP (std::size_t x, std::size_t y, std::size_t z=std::size_t(0)) const"
.br
.RI "Access to a given memory location within \fB_data\fP\&. "
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::size_t \fB_width\fP"
.br
.RI "width of channel(X - dimension) "
.ti -1c
.RI "std::size_t \fB_height\fP"
.br
.RI "height of channel(Z - dimension) "
.ti -1c
.RI "std::size_t \fB_channels\fP"
.br
.RI "number of channels "
.ti -1c
.RI "data_t const  * \fB_data\fP"
.br
.RI "The raw data pointer\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename data_t>
.br
struct cuvis::common_image_t< data_t >"Metaclass for handling image data (2d or 3d) 

Holds an X/Y/Z- dimensional image cube, without wavelength informaiton\&.
.PP
\fBTemplate Parameters\fP
.RS 4
\fIdata_t\fP The pixel bit depth, either std::uint8_t, std::uint16_t, std::uint32_t or float 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "template<typename data_t > data_t const  & \fBcuvis::common_image_t\fP< data_t >::get (std::size_t x, std::size_t y, std::size_t z = \fCstd::size_t(0)\fP) const"

.PP
Access to a given memory location within \fB_data\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIx\fP x pixel position (0 - \fB_width\fP - 1) 
.br
\fIy\fP y pixel position (0 - \fB_height\fP - 1) 
.br
\fIy\fP z pixel position (0 - \fB_channels\fP - 1), Use '0' for a 2d image 
.RE
.PP
\fBReturns\fP
.RS 4
the pixel value of the image / cube at position (x,y,z) 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "template<typename data_t > std::size_t \fBcuvis::common_image_t\fP< data_t >::_channels"

.PP
number of channels 
.SS "template<typename data_t > data_t const* \fBcuvis::common_image_t\fP< data_t >::_data"

.PP
The raw data pointer\&. It is recommended to access the data with the \fBget\fP function\&.
.br
 The memory interleave is BIP\&. E\&.g\&. for a 3x3x2 (x,y,z) the coordinates are:
.PP
.RS 4
(0,0,0); (0,0,1); (0,1,0); (0,1,1) 
.br
(1,0,0); (1,0,1); (1,1,0); (0,1,1) 
.br
(2,0,0); (2,0,1); (2,1,0); (0,1,1) 
.br
.RE
.PP

.SS "template<typename data_t > std::size_t \fBcuvis::common_image_t\fP< data_t >::_height"

.PP
height of channel(Z - dimension) 
.SS "template<typename data_t > std::size_t \fBcuvis::common_image_t\fP< data_t >::_width"

.PP
width of channel(X - dimension) 

.SH "Author"
.PP 
Generated automatically by Doxygen for CUVIS C++ SDK from the source code\&.
