# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _cuvis_pyil
else:
    import _cuvis_pyil

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)



def cuvis_version_swig():
    return _cuvis_pyil.cuvis_version_swig()

def cuvis_measurement_get_data_info_swig(i_mesu, o_pType, i_id):
    return _cuvis_pyil.cuvis_measurement_get_data_info_swig(i_mesu, o_pType, i_id)

def cuvis_measurement_get_data_string_swig(i_mesu, i_key):
    return _cuvis_pyil.cuvis_measurement_get_data_string_swig(i_mesu, i_key)

def new_p_int():
    return _cuvis_pyil.new_p_int()

def copy_p_int(value):
    return _cuvis_pyil.copy_p_int(value)

def delete_p_int(obj):
    return _cuvis_pyil.delete_p_int(obj)

def p_int_assign(obj, value):
    return _cuvis_pyil.p_int_assign(obj, value)

def p_int_value(obj):
    return _cuvis_pyil.p_int_value(obj)

def new_p_double():
    return _cuvis_pyil.new_p_double()

def copy_p_double(value):
    return _cuvis_pyil.copy_p_double(value)

def delete_p_double(obj):
    return _cuvis_pyil.delete_p_double(obj)

def p_double_assign(obj, value):
    return _cuvis_pyil.p_double_assign(obj, value)

def p_double_value(obj):
    return _cuvis_pyil.p_double_value(obj)

def new_p_unsigned_char(nelements):
    return _cuvis_pyil.new_p_unsigned_char(nelements)

def delete_p_unsigned_char(ary):
    return _cuvis_pyil.delete_p_unsigned_char(ary)

def p_unsigned_char_getitem(ary, index):
    return _cuvis_pyil.p_unsigned_char_getitem(ary, index)

def p_unsigned_char_setitem(ary, index, value):
    return _cuvis_pyil.p_unsigned_char_setitem(ary, index, value)

def new_p_unsigned_int(nelements):
    return _cuvis_pyil.new_p_unsigned_int(nelements)

def delete_p_unsigned_int(ary):
    return _cuvis_pyil.delete_p_unsigned_int(ary)

def p_unsigned_int_getitem(ary, index):
    return _cuvis_pyil.p_unsigned_int_getitem(ary, index)

def p_unsigned_int_setitem(ary, index, value):
    return _cuvis_pyil.p_unsigned_int_setitem(ary, index, value)

def cuvis_read_imbuf_uint8(imbuf):
    return _cuvis_pyil.cuvis_read_imbuf_uint8(imbuf)

def cuvis_read_imbuf_uint16(imbuf):
    return _cuvis_pyil.cuvis_read_imbuf_uint16(imbuf)

def cuvis_read_imbuf_uint32(imbuf):
    return _cuvis_pyil.cuvis_read_imbuf_uint32(imbuf)

def cuvis_read_imbuf_float32(imbuf):
    return _cuvis_pyil.cuvis_read_imbuf_float32(imbuf)
CUVIS_MAXBUF = _cuvis_pyil.CUVIS_MAXBUF
CUVIS_MODE_CAPABILITY_ACQUISITION_CAPTURE = _cuvis_pyil.CUVIS_MODE_CAPABILITY_ACQUISITION_CAPTURE
CUVIS_MODE_CAPABILITY_ACQUISITION_TIMELAPSE = _cuvis_pyil.CUVIS_MODE_CAPABILITY_ACQUISITION_TIMELAPSE
CUVIS_MODE_CAPABILITY_ACQUISITION_CONTINUOUS = _cuvis_pyil.CUVIS_MODE_CAPABILITY_ACQUISITION_CONTINUOUS
CUVIS_MODE_CAPABILITY_ACQUISITION_SNAPSHOT = _cuvis_pyil.CUVIS_MODE_CAPABILITY_ACQUISITION_SNAPSHOT
CUVIS_MODE_CAPABILITY_ACQUISITION_SETINTEGRATIONTIME = _cuvis_pyil.CUVIS_MODE_CAPABILITY_ACQUISITION_SETINTEGRATIONTIME
CUVIS_MODE_CAPABILITY_ACQUISITION_SETGAIN = _cuvis_pyil.CUVIS_MODE_CAPABILITY_ACQUISITION_SETGAIN
CUVIS_MODE_CAPABILITY_ACQUISITION_AVERAGING = _cuvis_pyil.CUVIS_MODE_CAPABILITY_ACQUISITION_AVERAGING
CUVIS_MODE_CAPABILITY_PROCESSING_SENSOR_RAW = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_SENSOR_RAW
CUVIS_MODE_CAPABILITY_PROCESSING_CUBE_RAW = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_CUBE_RAW
CUVIS_MODE_CAPABILITY_PROCESSING_CUBE_REF = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_CUBE_REF
CUVIS_MODE_CAPABILITY_PROCESSING_CUBE_DARKSUBTRACT = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_CUBE_DARKSUBTRACT
CUVIS_MODE_CAPABILITY_PROCESSING_CUBE_FLATFIELDING = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_CUBE_FLATFIELDING
CUVIS_MODE_CAPABILITY_PROCESSING_CUBE_SPECTRALRADIANCE = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_CUBE_SPECTRALRADIANCE
CUVIS_MODE_CAPABILITY_PROCESSING_SAVE_FILE = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_SAVE_FILE
CUVIS_MODE_CAPABILITY_PROCESSING_CLEAR_RAW = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_CLEAR_RAW
CUVIS_MODE_CAPABILITY_PROCESSING_CALC_LIVE = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_CALC_LIVE
CUVIS_MODE_CAPABILITY_PROCESSING_AUTOEXPOSURE = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_AUTOEXPOSURE
CUVIS_MODE_CAPABILITY_PROCESSING_ORIENTATION = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_ORIENTATION
CUVIS_MODE_CAPABILITY_PROCESSING_SET_WHITE = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_SET_WHITE
CUVIS_MODE_CAPABILITY_PROCESSING_SET_DARK = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_SET_DARK
CUVIS_MODE_CAPABILITY_PROCESSING_SET_SPRADCALIB = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_SET_SPRADCALIB
CUVIS_MODE_CAPABILITY_PROCESSING_SET_DISTANCECALIB = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_SET_DISTANCECALIB
CUVIS_MODE_CAPABILITY_PROCESSING_SET_DISTANCE_VALUE = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_SET_DISTANCE_VALUE
CUVIS_MODE_CAPABILITY_PROCESSING_USE_DARK_SPRADCALIB = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_USE_DARK_SPRADCALIB
CUVIS_MODE_CAPABILITY_PROCESSING_USE_WHITE_SPRADCALIB = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_USE_WHITE_SPRADCALIB
CUVIS_MODE_CAPABILITY_PROCESSING_REQUIRE_WHITEDARK_REFLECTANCE = _cuvis_pyil.CUVIS_MODE_CAPABILITY_PROCESSING_REQUIRE_WHITEDARK_REFLECTANCE
AcquisitionCapture = _cuvis_pyil.AcquisitionCapture
AcquisitionTimelapse = _cuvis_pyil.AcquisitionTimelapse
AcquisitionContinuous = _cuvis_pyil.AcquisitionContinuous
AcquisitionSnapshot = _cuvis_pyil.AcquisitionSnapshot
AcquisitionSetIntegrationtime = _cuvis_pyil.AcquisitionSetIntegrationtime
AcquisitionSetGain = _cuvis_pyil.AcquisitionSetGain
AcquisitionAveraging = _cuvis_pyil.AcquisitionAveraging
ProcessingSensorRaw = _cuvis_pyil.ProcessingSensorRaw
ProcessingCubeRaw = _cuvis_pyil.ProcessingCubeRaw
ProcessingCubeRef = _cuvis_pyil.ProcessingCubeRef
ProcessingCubeDarkSubtract = _cuvis_pyil.ProcessingCubeDarkSubtract
ProcessingCubeFlatFielding = _cuvis_pyil.ProcessingCubeFlatFielding
ProcessingCubeSpectralRadiance = _cuvis_pyil.ProcessingCubeSpectralRadiance
ProcessingSaveFile = _cuvis_pyil.ProcessingSaveFile
ProcessingClearRaw = _cuvis_pyil.ProcessingClearRaw
ProcessingCalcLive = _cuvis_pyil.ProcessingCalcLive
ProcessingAutoExposure = _cuvis_pyil.ProcessingAutoExposure
ProcessingOrientation = _cuvis_pyil.ProcessingOrientation
ProcessingSetWhite = _cuvis_pyil.ProcessingSetWhite
ProcessingSetDark = _cuvis_pyil.ProcessingSetDark
ProcessingSetSprad = _cuvis_pyil.ProcessingSetSprad
ProcessingSetDistanceCalib = _cuvis_pyil.ProcessingSetDistanceCalib
ProcessingSetDistanceValue = _cuvis_pyil.ProcessingSetDistanceValue
ProcessingUseDarkSpradcalib = _cuvis_pyil.ProcessingUseDarkSpradcalib
ProcessingUseWhiteSpradCalib = _cuvis_pyil.ProcessingUseWhiteSpradCalib
ProcessingRequireWhiteDarkReflectance = _cuvis_pyil.ProcessingRequireWhiteDarkReflectance
CUVIS_MESU_FLAG_OVERILLUMINATED = _cuvis_pyil.CUVIS_MESU_FLAG_OVERILLUMINATED
CUVIS_MESU_FLAG_POOR_REFERENCE = _cuvis_pyil.CUVIS_MESU_FLAG_POOR_REFERENCE
CUVIS_MESU_FLAG_POOR_WHITE_BALANCING = _cuvis_pyil.CUVIS_MESU_FLAG_POOR_WHITE_BALANCING
CUVIS_MESU_FLAG_DARK_INTTIME = _cuvis_pyil.CUVIS_MESU_FLAG_DARK_INTTIME
CUVIS_MESU_FLAG_DARK_TEMP = _cuvis_pyil.CUVIS_MESU_FLAG_DARK_TEMP
CUVIS_MESU_FLAG_WHITE_INTTIME = _cuvis_pyil.CUVIS_MESU_FLAG_WHITE_INTTIME
CUVIS_MESU_FLAG_WHITE_TEMP = _cuvis_pyil.CUVIS_MESU_FLAG_WHITE_TEMP
CUVIS_MESU_FLAG_WHITEDARK_INTTIME = _cuvis_pyil.CUVIS_MESU_FLAG_WHITEDARK_INTTIME
CUVIS_MESU_FLAG_WHITEDARK_TEMP = _cuvis_pyil.CUVIS_MESU_FLAG_WHITEDARK_TEMP
CUVIS_MESU_CUBE_KEY = _cuvis_pyil.CUVIS_MESU_CUBE_KEY
CUVIS_MESU_PAN_KEY = _cuvis_pyil.CUVIS_MESU_PAN_KEY
CUVIS_MESU_GPS_KEY = _cuvis_pyil.CUVIS_MESU_GPS_KEY
CUVIS_MESU_PREVIEW_KEY = _cuvis_pyil.CUVIS_MESU_PREVIEW_KEY
CUVIS_MESU_DARKREF_KEY = _cuvis_pyil.CUVIS_MESU_DARKREF_KEY
CUVIS_MESU_WHITEREF_KEY = _cuvis_pyil.CUVIS_MESU_WHITEREF_KEY
CUVIS_MESU_WHITEDARKREF_KEY = _cuvis_pyil.CUVIS_MESU_WHITEDARKREF_KEY
CUVIS_MESU_FLAG_OVERILLUMINATED_KEY = _cuvis_pyil.CUVIS_MESU_FLAG_OVERILLUMINATED_KEY
CUVIS_MESU_FLAG_POOR_REFERENCE_KEY = _cuvis_pyil.CUVIS_MESU_FLAG_POOR_REFERENCE_KEY
CUVIS_MESU_FLAG_POOR_WHITE_BALANCING_KEY = _cuvis_pyil.CUVIS_MESU_FLAG_POOR_WHITE_BALANCING_KEY
CUVIS_MESU_FLAG_DARK_INTTIME_KEY = _cuvis_pyil.CUVIS_MESU_FLAG_DARK_INTTIME_KEY
CUVIS_MESU_FLAG_DARK_TEMP_KEY = _cuvis_pyil.CUVIS_MESU_FLAG_DARK_TEMP_KEY
CUVIS_MESU_FLAG_WHITE_INTTIME_KEY = _cuvis_pyil.CUVIS_MESU_FLAG_WHITE_INTTIME_KEY
CUVIS_MESU_FLAG_WHITE_TEMP_KEY = _cuvis_pyil.CUVIS_MESU_FLAG_WHITE_TEMP_KEY
CUVIS_MESU_FLAG_WHITEDARK_INTTIME_KEY = _cuvis_pyil.CUVIS_MESU_FLAG_WHITEDARK_INTTIME_KEY
CUVIS_MESU_FLAG_WHITEDARK_TEMP_KEY = _cuvis_pyil.CUVIS_MESU_FLAG_WHITEDARK_TEMP_KEY
CUVIS_MESU_CUBE_INFO_KEY = _cuvis_pyil.CUVIS_MESU_CUBE_INFO_KEY
CUVIS_MESU_PAN_INFO_KEY = _cuvis_pyil.CUVIS_MESU_PAN_INFO_KEY
CUVIS_MESU_INFO_OK = _cuvis_pyil.CUVIS_MESU_INFO_OK
CUVIS_MESU_INFO_OVERILLUMINATED = _cuvis_pyil.CUVIS_MESU_INFO_OVERILLUMINATED
CUVIS_MESU_INFO_BAD_PIXEL = _cuvis_pyil.CUVIS_MESU_INFO_BAD_PIXEL
CUVIS_MESU_INFO_OVERILLUMINATED_REFERENCE = _cuvis_pyil.CUVIS_MESU_INFO_OVERILLUMINATED_REFERENCE
CUVIS_MESU_INFO_UNDERFLOW_MEASUREMENT_MIN_DARK = _cuvis_pyil.CUVIS_MESU_INFO_UNDERFLOW_MEASUREMENT_MIN_DARK
CUVIS_MESU_INFO_UNDERFLOW_WHITE_MIN_DARK = _cuvis_pyil.CUVIS_MESU_INFO_UNDERFLOW_WHITE_MIN_DARK
CUVIS_MESU_INFO_REFERENCE_CALC_OVERFLOW = _cuvis_pyil.CUVIS_MESU_INFO_REFERENCE_CALC_OVERFLOW
CUVIS_MESU_INFO_INCOMPLETE = _cuvis_pyil.CUVIS_MESU_INFO_INCOMPLETE
status_ok = _cuvis_pyil.status_ok
status_error = _cuvis_pyil.status_error
status_deferred = _cuvis_pyil.status_deferred
status_overwritten = _cuvis_pyil.status_overwritten
status_timeout = _cuvis_pyil.status_timeout
status_no_measurement = _cuvis_pyil.status_no_measurement
status_not_available = _cuvis_pyil.status_not_available
status_not_processed = _cuvis_pyil.status_not_processed
status_not_stored = _cuvis_pyil.status_not_stored
status_no_view = _cuvis_pyil.status_no_view
hardware_state_offline = _cuvis_pyil.hardware_state_offline
hardware_state_partially_online = _cuvis_pyil.hardware_state_partially_online
hardware_state_online = _cuvis_pyil.hardware_state_online
loglevel_fatal = _cuvis_pyil.loglevel_fatal
loglevel_error = _cuvis_pyil.loglevel_error
loglevel_warning = _cuvis_pyil.loglevel_warning
loglevel_info = _cuvis_pyil.loglevel_info
loglevel_debug = _cuvis_pyil.loglevel_debug
imbuffer_format_uint8 = _cuvis_pyil.imbuffer_format_uint8
imbuffer_format_uint16 = _cuvis_pyil.imbuffer_format_uint16
imbuffer_format_uint32 = _cuvis_pyil.imbuffer_format_uint32
imbuffer_format_float = _cuvis_pyil.imbuffer_format_float
data_type_unsupported = _cuvis_pyil.data_type_unsupported
data_type_image = _cuvis_pyil.data_type_image
data_type_gps = _cuvis_pyil.data_type_gps
data_type_string = _cuvis_pyil.data_type_string
data_type_sensor_info = _cuvis_pyil.data_type_sensor_info
Cube_Raw = _cuvis_pyil.Cube_Raw
Cube_DarkSubtract = _cuvis_pyil.Cube_DarkSubtract
Cube_Reflectance = _cuvis_pyil.Cube_Reflectance
Cube_SpectralRadiance = _cuvis_pyil.Cube_SpectralRadiance
Preview = _cuvis_pyil.Preview
Reference_Dark = _cuvis_pyil.Reference_Dark
Reference_White = _cuvis_pyil.Reference_White
Reference_WhiteDark = _cuvis_pyil.Reference_WhiteDark
Reference_SpRad = _cuvis_pyil.Reference_SpRad
Reference_Distance = _cuvis_pyil.Reference_Distance
OperationMode_Software = _cuvis_pyil.OperationMode_Software
OperationMode_Internal = _cuvis_pyil.OperationMode_Internal
OperationMode_External = _cuvis_pyil.OperationMode_External
OperationMode_Undefined = _cuvis_pyil.OperationMode_Undefined
pan_sharpening_interpolation_type_NearestNeighbor = _cuvis_pyil.pan_sharpening_interpolation_type_NearestNeighbor
pan_sharpening_interpolation_type_Linear = _cuvis_pyil.pan_sharpening_interpolation_type_Linear
pan_sharpening_interpolation_type_Cubic = _cuvis_pyil.pan_sharpening_interpolation_type_Cubic
pan_sharpening_interpolation_type_Lanczos = _cuvis_pyil.pan_sharpening_interpolation_type_Lanczos
pan_sharpening_algorithm_Noop = _cuvis_pyil.pan_sharpening_algorithm_Noop
pan_sharpening_algorithm_CubertMacroPixel = _cuvis_pyil.pan_sharpening_algorithm_CubertMacroPixel
pan_sharpening_algorithm_CubertPanRatio = _cuvis_pyil.pan_sharpening_algorithm_CubertPanRatio
tiff_compression_mode_None = _cuvis_pyil.tiff_compression_mode_None
tiff_compression_mode_LZW = _cuvis_pyil.tiff_compression_mode_LZW
tiff_format_Single = _cuvis_pyil.tiff_format_Single
tiff_format_MultiChannel = _cuvis_pyil.tiff_format_MultiChannel
tiff_format_MultiPage = _cuvis_pyil.tiff_format_MultiPage
view_category_image = _cuvis_pyil.view_category_image
view_category_data = _cuvis_pyil.view_category_data
component_type_image_sensor = _cuvis_pyil.component_type_image_sensor
component_type_misc_sensor = _cuvis_pyil.component_type_misc_sensor
class cuvis_imbuffer_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    raw = property(_cuvis_pyil.cuvis_imbuffer_t_raw_get, _cuvis_pyil.cuvis_imbuffer_t_raw_set)
    bytes = property(_cuvis_pyil.cuvis_imbuffer_t_bytes_get, _cuvis_pyil.cuvis_imbuffer_t_bytes_set)
    length = property(_cuvis_pyil.cuvis_imbuffer_t_length_get, _cuvis_pyil.cuvis_imbuffer_t_length_set)
    width = property(_cuvis_pyil.cuvis_imbuffer_t_width_get, _cuvis_pyil.cuvis_imbuffer_t_width_set)
    height = property(_cuvis_pyil.cuvis_imbuffer_t_height_get, _cuvis_pyil.cuvis_imbuffer_t_height_set)
    channels = property(_cuvis_pyil.cuvis_imbuffer_t_channels_get, _cuvis_pyil.cuvis_imbuffer_t_channels_set)
    format = property(_cuvis_pyil.cuvis_imbuffer_t_format_get, _cuvis_pyil.cuvis_imbuffer_t_format_set)
    wavelength = property(_cuvis_pyil.cuvis_imbuffer_t_wavelength_get, _cuvis_pyil.cuvis_imbuffer_t_wavelength_set)

    def __init__(self):
        _cuvis_pyil.cuvis_imbuffer_t_swiginit(self, _cuvis_pyil.new_cuvis_imbuffer_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_imbuffer_t

# Register cuvis_imbuffer_t in _cuvis_pyil:
_cuvis_pyil.cuvis_imbuffer_t_swigregister(cuvis_imbuffer_t)

class cuvis_sensor_info_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    averages = property(_cuvis_pyil.cuvis_sensor_info_t_averages_get, _cuvis_pyil.cuvis_sensor_info_t_averages_set)
    temperature = property(_cuvis_pyil.cuvis_sensor_info_t_temperature_get, _cuvis_pyil.cuvis_sensor_info_t_temperature_set)
    gain = property(_cuvis_pyil.cuvis_sensor_info_t_gain_get, _cuvis_pyil.cuvis_sensor_info_t_gain_set)
    readout_time = property(_cuvis_pyil.cuvis_sensor_info_t_readout_time_get, _cuvis_pyil.cuvis_sensor_info_t_readout_time_set)

    def __init__(self):
        _cuvis_pyil.cuvis_sensor_info_t_swiginit(self, _cuvis_pyil.new_cuvis_sensor_info_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_sensor_info_t

# Register cuvis_sensor_info_t in _cuvis_pyil:
_cuvis_pyil.cuvis_sensor_info_t_swigregister(cuvis_sensor_info_t)

class cuvis_gps_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    longitude = property(_cuvis_pyil.cuvis_gps_t_longitude_get, _cuvis_pyil.cuvis_gps_t_longitude_set)
    latitude = property(_cuvis_pyil.cuvis_gps_t_latitude_get, _cuvis_pyil.cuvis_gps_t_latitude_set)
    altitude = property(_cuvis_pyil.cuvis_gps_t_altitude_get, _cuvis_pyil.cuvis_gps_t_altitude_set)
    time = property(_cuvis_pyil.cuvis_gps_t_time_get, _cuvis_pyil.cuvis_gps_t_time_set)

    def __init__(self):
        _cuvis_pyil.cuvis_gps_t_swiginit(self, _cuvis_pyil.new_cuvis_gps_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_gps_t

# Register cuvis_gps_t in _cuvis_pyil:
_cuvis_pyil.cuvis_gps_t_swigregister(cuvis_gps_t)

class cuvis_session_info_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_cuvis_pyil.cuvis_session_info_t_name_get, _cuvis_pyil.cuvis_session_info_t_name_set)
    session_no = property(_cuvis_pyil.cuvis_session_info_t_session_no_get, _cuvis_pyil.cuvis_session_info_t_session_no_set)
    sequence_no = property(_cuvis_pyil.cuvis_session_info_t_sequence_no_get, _cuvis_pyil.cuvis_session_info_t_sequence_no_set)

    def __init__(self):
        _cuvis_pyil.cuvis_session_info_t_swiginit(self, _cuvis_pyil.new_cuvis_session_info_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_session_info_t

# Register cuvis_session_info_t in _cuvis_pyil:
_cuvis_pyil.cuvis_session_info_t_swigregister(cuvis_session_info_t)

class cuvis_mesu_metadata_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    name = property(_cuvis_pyil.cuvis_mesu_metadata_t_name_get, _cuvis_pyil.cuvis_mesu_metadata_t_name_set)
    path = property(_cuvis_pyil.cuvis_mesu_metadata_t_path_get, _cuvis_pyil.cuvis_mesu_metadata_t_path_set)
    comment = property(_cuvis_pyil.cuvis_mesu_metadata_t_comment_get, _cuvis_pyil.cuvis_mesu_metadata_t_comment_set)
    capture_time = property(_cuvis_pyil.cuvis_mesu_metadata_t_capture_time_get, _cuvis_pyil.cuvis_mesu_metadata_t_capture_time_set)
    factory_calibration = property(_cuvis_pyil.cuvis_mesu_metadata_t_factory_calibration_get, _cuvis_pyil.cuvis_mesu_metadata_t_factory_calibration_set)
    product_name = property(_cuvis_pyil.cuvis_mesu_metadata_t_product_name_get, _cuvis_pyil.cuvis_mesu_metadata_t_product_name_set)
    serial_number = property(_cuvis_pyil.cuvis_mesu_metadata_t_serial_number_get, _cuvis_pyil.cuvis_mesu_metadata_t_serial_number_set)
    assembly = property(_cuvis_pyil.cuvis_mesu_metadata_t_assembly_get, _cuvis_pyil.cuvis_mesu_metadata_t_assembly_set)
    integration_time = property(_cuvis_pyil.cuvis_mesu_metadata_t_integration_time_get, _cuvis_pyil.cuvis_mesu_metadata_t_integration_time_set)
    averages = property(_cuvis_pyil.cuvis_mesu_metadata_t_averages_get, _cuvis_pyil.cuvis_mesu_metadata_t_averages_set)
    session_info_name = property(_cuvis_pyil.cuvis_mesu_metadata_t_session_info_name_get, _cuvis_pyil.cuvis_mesu_metadata_t_session_info_name_set)
    session_info_session_no = property(_cuvis_pyil.cuvis_mesu_metadata_t_session_info_session_no_get, _cuvis_pyil.cuvis_mesu_metadata_t_session_info_session_no_set)
    session_info_sequence_no = property(_cuvis_pyil.cuvis_mesu_metadata_t_session_info_sequence_no_get, _cuvis_pyil.cuvis_mesu_metadata_t_session_info_sequence_no_set)
    processing_mode = property(_cuvis_pyil.cuvis_mesu_metadata_t_processing_mode_get, _cuvis_pyil.cuvis_mesu_metadata_t_processing_mode_set)
    measurement_flags = property(_cuvis_pyil.cuvis_mesu_metadata_t_measurement_flags_get, _cuvis_pyil.cuvis_mesu_metadata_t_measurement_flags_set)

    def __init__(self):
        _cuvis_pyil.cuvis_mesu_metadata_t_swiginit(self, _cuvis_pyil.new_cuvis_mesu_metadata_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_mesu_metadata_t

# Register cuvis_mesu_metadata_t in _cuvis_pyil:
_cuvis_pyil.cuvis_mesu_metadata_t_swigregister(cuvis_mesu_metadata_t)

class cuvis_save_args_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    allow_fragmentation = property(_cuvis_pyil.cuvis_save_args_t_allow_fragmentation_get, _cuvis_pyil.cuvis_save_args_t_allow_fragmentation_set)
    allow_overwrite = property(_cuvis_pyil.cuvis_save_args_t_allow_overwrite_get, _cuvis_pyil.cuvis_save_args_t_allow_overwrite_set)
    allow_drop = property(_cuvis_pyil.cuvis_save_args_t_allow_drop_get, _cuvis_pyil.cuvis_save_args_t_allow_drop_set)
    allow_session_file = property(_cuvis_pyil.cuvis_save_args_t_allow_session_file_get, _cuvis_pyil.cuvis_save_args_t_allow_session_file_set)
    allow_info_file = property(_cuvis_pyil.cuvis_save_args_t_allow_info_file_get, _cuvis_pyil.cuvis_save_args_t_allow_info_file_set)
    operation_mode = property(_cuvis_pyil.cuvis_save_args_t_operation_mode_get, _cuvis_pyil.cuvis_save_args_t_operation_mode_set)
    fps = property(_cuvis_pyil.cuvis_save_args_t_fps_get, _cuvis_pyil.cuvis_save_args_t_fps_set)
    soft_limit = property(_cuvis_pyil.cuvis_save_args_t_soft_limit_get, _cuvis_pyil.cuvis_save_args_t_soft_limit_set)
    hard_limit = property(_cuvis_pyil.cuvis_save_args_t_hard_limit_get, _cuvis_pyil.cuvis_save_args_t_hard_limit_set)
    max_buftime = property(_cuvis_pyil.cuvis_save_args_t_max_buftime_get, _cuvis_pyil.cuvis_save_args_t_max_buftime_set)

    def __init__(self):
        _cuvis_pyil.cuvis_save_args_t_swiginit(self, _cuvis_pyil.new_cuvis_save_args_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_save_args_t

# Register cuvis_save_args_t in _cuvis_pyil:
_cuvis_pyil.cuvis_save_args_t_swigregister(cuvis_save_args_t)

class cuvis_proc_args_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    processing_mode = property(_cuvis_pyil.cuvis_proc_args_t_processing_mode_get, _cuvis_pyil.cuvis_proc_args_t_processing_mode_set)
    allow_recalib = property(_cuvis_pyil.cuvis_proc_args_t_allow_recalib_get, _cuvis_pyil.cuvis_proc_args_t_allow_recalib_set)

    def __init__(self):
        _cuvis_pyil.cuvis_proc_args_t_swiginit(self, _cuvis_pyil.new_cuvis_proc_args_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_proc_args_t

# Register cuvis_proc_args_t in _cuvis_pyil:
_cuvis_pyil.cuvis_proc_args_t_swigregister(cuvis_proc_args_t)

class cuvis_export_general_settings_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    export_dir = property(_cuvis_pyil.cuvis_export_general_settings_t_export_dir_get, _cuvis_pyil.cuvis_export_general_settings_t_export_dir_set)
    channel_selection = property(_cuvis_pyil.cuvis_export_general_settings_t_channel_selection_get, _cuvis_pyil.cuvis_export_general_settings_t_channel_selection_set)
    spectra_multiplier = property(_cuvis_pyil.cuvis_export_general_settings_t_spectra_multiplier_get, _cuvis_pyil.cuvis_export_general_settings_t_spectra_multiplier_set)
    pan_scale = property(_cuvis_pyil.cuvis_export_general_settings_t_pan_scale_get, _cuvis_pyil.cuvis_export_general_settings_t_pan_scale_set)
    pan_interpolation_type = property(_cuvis_pyil.cuvis_export_general_settings_t_pan_interpolation_type_get, _cuvis_pyil.cuvis_export_general_settings_t_pan_interpolation_type_set)
    pan_algorithm = property(_cuvis_pyil.cuvis_export_general_settings_t_pan_algorithm_get, _cuvis_pyil.cuvis_export_general_settings_t_pan_algorithm_set)
    add_pan = property(_cuvis_pyil.cuvis_export_general_settings_t_add_pan_get, _cuvis_pyil.cuvis_export_general_settings_t_add_pan_set)
    add_fullscale_pan = property(_cuvis_pyil.cuvis_export_general_settings_t_add_fullscale_pan_get, _cuvis_pyil.cuvis_export_general_settings_t_add_fullscale_pan_set)
    permissive = property(_cuvis_pyil.cuvis_export_general_settings_t_permissive_get, _cuvis_pyil.cuvis_export_general_settings_t_permissive_set)

    def __init__(self):
        _cuvis_pyil.cuvis_export_general_settings_t_swiginit(self, _cuvis_pyil.new_cuvis_export_general_settings_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_export_general_settings_t

# Register cuvis_export_general_settings_t in _cuvis_pyil:
_cuvis_pyil.cuvis_export_general_settings_t_swigregister(cuvis_export_general_settings_t)

class cuvis_export_view_settings_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    userplugin = property(_cuvis_pyil.cuvis_export_view_settings_t_userplugin_get, _cuvis_pyil.cuvis_export_view_settings_t_userplugin_set)

    def __init__(self):
        _cuvis_pyil.cuvis_export_view_settings_t_swiginit(self, _cuvis_pyil.new_cuvis_export_view_settings_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_export_view_settings_t

# Register cuvis_export_view_settings_t in _cuvis_pyil:
_cuvis_pyil.cuvis_export_view_settings_t_swigregister(cuvis_export_view_settings_t)

class cuvis_export_tiff_settings_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    compression_mode = property(_cuvis_pyil.cuvis_export_tiff_settings_t_compression_mode_get, _cuvis_pyil.cuvis_export_tiff_settings_t_compression_mode_set)
    format = property(_cuvis_pyil.cuvis_export_tiff_settings_t_format_get, _cuvis_pyil.cuvis_export_tiff_settings_t_format_set)

    def __init__(self):
        _cuvis_pyil.cuvis_export_tiff_settings_t_swiginit(self, _cuvis_pyil.new_cuvis_export_tiff_settings_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_export_tiff_settings_t

# Register cuvis_export_tiff_settings_t in _cuvis_pyil:
_cuvis_pyil.cuvis_export_tiff_settings_t_swigregister(cuvis_export_tiff_settings_t)

class cuvis_viewer_settings_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    userplugin = property(_cuvis_pyil.cuvis_viewer_settings_t_userplugin_get, _cuvis_pyil.cuvis_viewer_settings_t_userplugin_set)
    pan_scale = property(_cuvis_pyil.cuvis_viewer_settings_t_pan_scale_get, _cuvis_pyil.cuvis_viewer_settings_t_pan_scale_set)
    pan_interpolation_type = property(_cuvis_pyil.cuvis_viewer_settings_t_pan_interpolation_type_get, _cuvis_pyil.cuvis_viewer_settings_t_pan_interpolation_type_set)
    pan_algorithm = property(_cuvis_pyil.cuvis_viewer_settings_t_pan_algorithm_get, _cuvis_pyil.cuvis_viewer_settings_t_pan_algorithm_set)
    complete = property(_cuvis_pyil.cuvis_viewer_settings_t_complete_get, _cuvis_pyil.cuvis_viewer_settings_t_complete_set)

    def __init__(self):
        _cuvis_pyil.cuvis_viewer_settings_t_swiginit(self, _cuvis_pyil.new_cuvis_viewer_settings_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_viewer_settings_t

# Register cuvis_viewer_settings_t in _cuvis_pyil:
_cuvis_pyil.cuvis_viewer_settings_t_swigregister(cuvis_viewer_settings_t)

class cuvis_view_data_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    id = property(_cuvis_pyil.cuvis_view_data_t_id_get, _cuvis_pyil.cuvis_view_data_t_id_set)
    category = property(_cuvis_pyil.cuvis_view_data_t_category_get, _cuvis_pyil.cuvis_view_data_t_category_set)
    data = property(_cuvis_pyil.cuvis_view_data_t_data_get, _cuvis_pyil.cuvis_view_data_t_data_set)
    show = property(_cuvis_pyil.cuvis_view_data_t_show_get, _cuvis_pyil.cuvis_view_data_t_show_set)

    def __init__(self):
        _cuvis_pyil.cuvis_view_data_t_swiginit(self, _cuvis_pyil.new_cuvis_view_data_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_view_data_t

# Register cuvis_view_data_t in _cuvis_pyil:
_cuvis_pyil.cuvis_view_data_t_swigregister(cuvis_view_data_t)

class cuvis_component_info_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    type = property(_cuvis_pyil.cuvis_component_info_t_type_get, _cuvis_pyil.cuvis_component_info_t_type_set)
    displayname = property(_cuvis_pyil.cuvis_component_info_t_displayname_get, _cuvis_pyil.cuvis_component_info_t_displayname_set)
    sensorinfo = property(_cuvis_pyil.cuvis_component_info_t_sensorinfo_get, _cuvis_pyil.cuvis_component_info_t_sensorinfo_set)
    userfield = property(_cuvis_pyil.cuvis_component_info_t_userfield_get, _cuvis_pyil.cuvis_component_info_t_userfield_set)
    pixelformat = property(_cuvis_pyil.cuvis_component_info_t_pixelformat_get, _cuvis_pyil.cuvis_component_info_t_pixelformat_set)

    def __init__(self):
        _cuvis_pyil.cuvis_component_info_t_swiginit(self, _cuvis_pyil.new_cuvis_component_info_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_component_info_t

# Register cuvis_component_info_t in _cuvis_pyil:
_cuvis_pyil.cuvis_component_info_t_swigregister(cuvis_component_info_t)

class cuvis_event_base_data_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    event_id = property(_cuvis_pyil.cuvis_event_base_data_t_event_id_get, _cuvis_pyil.cuvis_event_base_data_t_event_id_set)

    def __init__(self):
        _cuvis_pyil.cuvis_event_base_data_t_swiginit(self, _cuvis_pyil.new_cuvis_event_base_data_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_event_base_data_t

# Register cuvis_event_base_data_t in _cuvis_pyil:
_cuvis_pyil.cuvis_event_base_data_t_swigregister(cuvis_event_base_data_t)

class cuvis_event_acquisition_data_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    source = property(_cuvis_pyil.cuvis_event_acquisition_data_t_source_get, _cuvis_pyil.cuvis_event_acquisition_data_t_source_set)

    def __init__(self):
        _cuvis_pyil.cuvis_event_acquisition_data_t_swiginit(self, _cuvis_pyil.new_cuvis_event_acquisition_data_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_event_acquisition_data_t

# Register cuvis_event_acquisition_data_t in _cuvis_pyil:
_cuvis_pyil.cuvis_event_acquisition_data_t_swigregister(cuvis_event_acquisition_data_t)

class cuvis_event_processing_event_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    source = property(_cuvis_pyil.cuvis_event_processing_event_t_source_get, _cuvis_pyil.cuvis_event_processing_event_t_source_set)

    def __init__(self):
        _cuvis_pyil.cuvis_event_processing_event_t_swiginit(self, _cuvis_pyil.new_cuvis_event_processing_event_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_event_processing_event_t

# Register cuvis_event_processing_event_t in _cuvis_pyil:
_cuvis_pyil.cuvis_event_processing_event_t_swigregister(cuvis_event_processing_event_t)

class cuvis_event_qualitiy_event_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    source = property(_cuvis_pyil.cuvis_event_qualitiy_event_t_source_get, _cuvis_pyil.cuvis_event_qualitiy_event_t_source_set)

    def __init__(self):
        _cuvis_pyil.cuvis_event_qualitiy_event_t_swiginit(self, _cuvis_pyil.new_cuvis_event_qualitiy_event_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_event_qualitiy_event_t

# Register cuvis_event_qualitiy_event_t in _cuvis_pyil:
_cuvis_pyil.cuvis_event_qualitiy_event_t_swigregister(cuvis_event_qualitiy_event_t)

class cuvis_event_component_data_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    compent_id = property(_cuvis_pyil.cuvis_event_component_data_t_compent_id_get, _cuvis_pyil.cuvis_event_component_data_t_compent_id_set)

    def __init__(self):
        _cuvis_pyil.cuvis_event_component_data_t_swiginit(self, _cuvis_pyil.new_cuvis_event_component_data_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_event_component_data_t

# Register cuvis_event_component_data_t in _cuvis_pyil:
_cuvis_pyil.cuvis_event_component_data_t_swigregister(cuvis_event_component_data_t)

class cuvis_worker_settings_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    worker_count = property(_cuvis_pyil.cuvis_worker_settings_t_worker_count_get, _cuvis_pyil.cuvis_worker_settings_t_worker_count_set)
    poll_interval = property(_cuvis_pyil.cuvis_worker_settings_t_poll_interval_get, _cuvis_pyil.cuvis_worker_settings_t_poll_interval_set)
    keep_out_of_sequence = property(_cuvis_pyil.cuvis_worker_settings_t_keep_out_of_sequence_get, _cuvis_pyil.cuvis_worker_settings_t_keep_out_of_sequence_set)
    worker_queue_size = property(_cuvis_pyil.cuvis_worker_settings_t_worker_queue_size_get, _cuvis_pyil.cuvis_worker_settings_t_worker_queue_size_set)

    def __init__(self):
        _cuvis_pyil.cuvis_worker_settings_t_swiginit(self, _cuvis_pyil.new_cuvis_worker_settings_t())
    __swig_destroy__ = _cuvis_pyil.delete_cuvis_worker_settings_t

# Register cuvis_worker_settings_t in _cuvis_pyil:
_cuvis_pyil.cuvis_worker_settings_t_swigregister(cuvis_worker_settings_t)

CUVIS_EVENT_PROCESSING = _cuvis_pyil.CUVIS_EVENT_PROCESSING
CUVIS_EVENT_ACQUISTION = _cuvis_pyil.CUVIS_EVENT_ACQUISTION
CUVIS_EVENT_COMPONENT = _cuvis_pyil.CUVIS_EVENT_COMPONENT
CUVIS_EVENT_TRIGGER_SKIPPED = _cuvis_pyil.CUVIS_EVENT_TRIGGER_SKIPPED

def cuvis_event_get_acquisition_data(i_event, o_p_acquisition_data):
    return _cuvis_pyil.cuvis_event_get_acquisition_data(i_event, o_p_acquisition_data)

def cuvis_register_external_event_callback(i_callback, i_type, o_p_handler_id):
    return _cuvis_pyil.cuvis_register_external_event_callback(i_callback, i_type, o_p_handler_id)

def cuvis_unregister_event_callback(i_handler_id):
    return _cuvis_pyil.cuvis_unregister_event_callback(i_handler_id)

def cuvis_get_last_error_msg():
    return _cuvis_pyil.cuvis_get_last_error_msg()

def cuvis_set_last_error_locale(id):
    return _cuvis_pyil.cuvis_set_last_error_locale(id)

def cuvis_get_last_error_msg_localized():
    return _cuvis_pyil.cuvis_get_last_error_msg_localized()

def cuvis_set_log_level(level):
    return _cuvis_pyil.cuvis_set_log_level(level)

def cuvis_register_log_callback(i_callback, i_min_level):
    return _cuvis_pyil.cuvis_register_log_callback(i_callback, i_min_level)

def cuvis_reset_log_callback():
    return _cuvis_pyil.cuvis_reset_log_callback()

def cuvis_register_log_callback_localized(i_callback_localized, i_min_level, i_locale_id):
    return _cuvis_pyil.cuvis_register_log_callback_localized(i_callback_localized, i_min_level, i_locale_id)

def cuvis_reset_log_callback_localized():
    return _cuvis_pyil.cuvis_reset_log_callback_localized()

def cuvis_init(i_settings_path):
    return _cuvis_pyil.cuvis_init(i_settings_path)

def cuvis_async_call_get(io_pAsyncResult, timeout_ms):
    return _cuvis_pyil.cuvis_async_call_get(io_pAsyncResult, timeout_ms)

def cuvis_async_capture_free(io_pAsyncResult):
    return _cuvis_pyil.cuvis_async_capture_free(io_pAsyncResult)

def cuvis_async_call_free(io_pAsyncResult):
    return _cuvis_pyil.cuvis_async_call_free(io_pAsyncResult)

def cuvis_acq_cont_capture(i_acqCont, o_pMesu, timeout_ms):
    return _cuvis_pyil.cuvis_acq_cont_capture(i_acqCont, o_pMesu, timeout_ms)

def cuvis_acq_cont_capture_async(i_acqCont, o_pAsyncResult):
    return _cuvis_pyil.cuvis_acq_cont_capture_async(i_acqCont, o_pAsyncResult)

def cuvis_async_capture_get(io_pAsyncResult, timeout_ms, o_pMesu):
    return _cuvis_pyil.cuvis_async_capture_get(io_pAsyncResult, timeout_ms, o_pMesu)

def cuvis_measurement_load(i_path, o_pMesu):
    return _cuvis_pyil.cuvis_measurement_load(i_path, o_pMesu)

def cuvis_measurement_deep_copy(i_mesu, o_pMesu):
    return _cuvis_pyil.cuvis_measurement_deep_copy(i_mesu, o_pMesu)

def cuvis_session_file_load(i_path, o_pSess):
    return _cuvis_pyil.cuvis_session_file_load(i_path, o_pSess)

def cuvis_session_file_free(o_pSess):
    return _cuvis_pyil.cuvis_session_file_free(o_pSess)

def cuvis_session_file_get_mesu(i_sess, i_frameNo, o_pMesu):
    return _cuvis_pyil.cuvis_session_file_get_mesu(i_sess, i_frameNo, o_pMesu)

def cuvis_session_file_get_size(i_sess, o_pSize):
    return _cuvis_pyil.cuvis_session_file_get_size(i_sess, o_pSize)

def cuvis_session_file_get_size_non_dropped(i_sess, o_pSize):
    return _cuvis_pyil.cuvis_session_file_get_size_non_dropped(i_sess, o_pSize)

def cuvis_session_file_get_mesu_non_dropped(i_sess, i_frameNo, o_pMesu):
    return _cuvis_pyil.cuvis_session_file_get_mesu_non_dropped(i_sess, i_frameNo, o_pMesu)

def cuvis_session_file_get_fps(i_sess, o_pFps):
    return _cuvis_pyil.cuvis_session_file_get_fps(i_sess, o_pFps)

def cuvis_session_file_get_operation_mode(i_sess, o_pMode):
    return _cuvis_pyil.cuvis_session_file_get_operation_mode(i_sess, o_pMode)

def cuvis_acq_cont_get_next_measurement(i_acqCont, o_pMesu, timeout_ms):
    return _cuvis_pyil.cuvis_acq_cont_get_next_measurement(i_acqCont, o_pMesu, timeout_ms)

def cuvis_acq_cont_has_next_measurement(i_acqCont, o_pHasNext):
    return _cuvis_pyil.cuvis_acq_cont_has_next_measurement(i_acqCont, o_pHasNext)

def cuvis_measurement_save(i_mesu, i_path, args):
    return _cuvis_pyil.cuvis_measurement_save(i_mesu, i_path, args)

def cuvis_measurement_set_name(i_mesu, i_name):
    return _cuvis_pyil.cuvis_measurement_set_name(i_mesu, i_name)

def cuvis_measurement_set_comment(i_mesu, i_comment):
    return _cuvis_pyil.cuvis_measurement_set_comment(i_mesu, i_comment)

def cuvis_measurement_free(io_pMesu):
    return _cuvis_pyil.cuvis_measurement_free(io_pMesu)

def cuvis_measurement_get_metadata(i_mesu, o_pMetaData):
    return _cuvis_pyil.cuvis_measurement_get_metadata(i_mesu, o_pMetaData)

def cuvis_measurement_get_data_image(i_mesu, i_key, o_pBuf):
    return _cuvis_pyil.cuvis_measurement_get_data_image(i_mesu, i_key, o_pBuf)

def cuvis_measurement_get_data_sensor_info(i_mesu, i_key, o_pValue):
    return _cuvis_pyil.cuvis_measurement_get_data_sensor_info(i_mesu, i_key, o_pValue)

def cuvis_measurement_get_data_gps(i_mesu, i_key, o_pGps):
    return _cuvis_pyil.cuvis_measurement_get_data_gps(i_mesu, i_key, o_pGps)

def cuvis_measurement_get_data_count(i_mesu, o_pCount):
    return _cuvis_pyil.cuvis_measurement_get_data_count(i_mesu, o_pCount)

def cuvis_calib_create_from_path(i_factoryDir, o_pCalibration):
    return _cuvis_pyil.cuvis_calib_create_from_path(i_factoryDir, o_pCalibration)

def cuvis_calib_free(io_pCalibration):
    return _cuvis_pyil.cuvis_calib_free(io_pCalibration)

def cuvis_acq_cont_create_from_calib(i_calib, o_pAcqCont):
    return _cuvis_pyil.cuvis_acq_cont_create_from_calib(i_calib, o_pAcqCont)

def cuvis_acq_cont_get_state(i_acqCont, o_pState):
    return _cuvis_pyil.cuvis_acq_cont_get_state(i_acqCont, o_pState)

def cuvis_acq_cont_get_session_info(i_acqCont, o_pSessionInfo):
    return _cuvis_pyil.cuvis_acq_cont_get_session_info(i_acqCont, o_pSessionInfo)

def cuvis_acq_cont_set_session_info(i_acqCont, i_pSessionInfo):
    return _cuvis_pyil.cuvis_acq_cont_set_session_info(i_acqCont, i_pSessionInfo)

def cuvis_acq_cont_queue_size_set(i_acqCont, i_size):
    return _cuvis_pyil.cuvis_acq_cont_queue_size_set(i_acqCont, i_size)

def cuvis_acq_cont_free(io_pAcqCont):
    return _cuvis_pyil.cuvis_acq_cont_free(io_pAcqCont)

def cuvis_acq_cont_get_component_info(i_acqCont, i_id, o_pCompInfo):
    return _cuvis_pyil.cuvis_acq_cont_get_component_info(i_acqCont, i_id, o_pCompInfo)

def cuvis_acq_cont_get_component_count(i_acqCont, o_pCount):
    return _cuvis_pyil.cuvis_acq_cont_get_component_count(i_acqCont, o_pCount)

def cuvis_proc_cont_create_from_calib(i_calib, o_pProcCont):
    return _cuvis_pyil.cuvis_proc_cont_create_from_calib(i_calib, o_pProcCont)

def cuvis_proc_cont_create_from_mesu(i_mesu, o_pProcCont):
    return _cuvis_pyil.cuvis_proc_cont_create_from_mesu(i_mesu, o_pProcCont)

def cuvis_proc_cont_create_from_session_file(i_sess, o_pProcCont):
    return _cuvis_pyil.cuvis_proc_cont_create_from_session_file(i_sess, o_pProcCont)

def cuvis_proc_cont_get_reference(i_procCont, o_pMesu, i_type):
    return _cuvis_pyil.cuvis_proc_cont_get_reference(i_procCont, o_pMesu, i_type)

def cuvis_proc_cont_set_reference(i_procCont, i_mesu, i_type):
    return _cuvis_pyil.cuvis_proc_cont_set_reference(i_procCont, i_mesu, i_type)

def cuvis_proc_cont_clear_reference(i_procCont, i_type):
    return _cuvis_pyil.cuvis_proc_cont_clear_reference(i_procCont, i_type)

def cuvis_proc_cont_calc_distance(i_procCont, i_distanceMM):
    return _cuvis_pyil.cuvis_proc_cont_calc_distance(i_procCont, i_distanceMM)

def cuvis_proc_cont_has_reference(i_procCont, i_type, o_pHasReference):
    return _cuvis_pyil.cuvis_proc_cont_has_reference(i_procCont, i_type, o_pHasReference)

def cuvis_proc_cont_is_capable(i_procCont, i_mesu, args, o_pIsCapable):
    return _cuvis_pyil.cuvis_proc_cont_is_capable(i_procCont, i_mesu, args, o_pIsCapable)

def cuvis_proc_cont_apply(i_procCont, i_mesu):
    return _cuvis_pyil.cuvis_proc_cont_apply(i_procCont, i_mesu)

def cuvis_proc_cont_set_args(i_procCont, i_args):
    return _cuvis_pyil.cuvis_proc_cont_set_args(i_procCont, i_args)

def cuvis_proc_cont_free(io_pProcCont):
    return _cuvis_pyil.cuvis_proc_cont_free(io_pProcCont)

def cuvis_exporter_create_cube(o_pExporter, generalSettings, formatSettings):
    return _cuvis_pyil.cuvis_exporter_create_cube(o_pExporter, generalSettings, formatSettings)

def cuvis_exporter_create_tiff(o_pExporter, generalSettings, formatSettings):
    return _cuvis_pyil.cuvis_exporter_create_tiff(o_pExporter, generalSettings, formatSettings)

def cuvis_exporter_create_envi(o_pExporter, generalSettings):
    return _cuvis_pyil.cuvis_exporter_create_envi(o_pExporter, generalSettings)

def cuvis_exporter_create_view(o_pExporter, generalSettings, formatSettings):
    return _cuvis_pyil.cuvis_exporter_create_view(o_pExporter, generalSettings, formatSettings)

def cuvis_exporter_apply(i_exporter, i_mesu):
    return _cuvis_pyil.cuvis_exporter_apply(i_exporter, i_mesu)

def cuvis_exporter_get_queue_used(i_exporter, o_pQueueUsed):
    return _cuvis_pyil.cuvis_exporter_get_queue_used(i_exporter, o_pQueueUsed)

def cuvis_exporter_free(io_pExporter):
    return _cuvis_pyil.cuvis_exporter_free(io_pExporter)

def cuvis_viewer_create(o_pViewer, viewerSettings):
    return _cuvis_pyil.cuvis_viewer_create(o_pViewer, viewerSettings)

def cuvis_viewer_apply(i_viewer, i_mesu, o_pView):
    return _cuvis_pyil.cuvis_viewer_apply(i_viewer, i_mesu, o_pView)

def cuvis_viewer_free(io_pViewer):
    return _cuvis_pyil.cuvis_viewer_free(io_pViewer)

def cuvis_view_get_data_count(i_view, o_pCount):
    return _cuvis_pyil.cuvis_view_get_data_count(i_view, o_pCount)

def cuvis_view_get_data(i_view, i_index, o_pData):
    return _cuvis_pyil.cuvis_view_get_data(i_view, i_index, o_pData)

def cuvis_view_free(io_pView):
    return _cuvis_pyil.cuvis_view_free(io_pView)

def cuvis_calib_get_capabilities(i_calibration, i_mode, o_pCapabilities):
    return _cuvis_pyil.cuvis_calib_get_capabilities(i_calibration, i_mode, o_pCapabilities)

def cuvis_measurement_get_capabilities(i_mesu, o_pCapabilities):
    return _cuvis_pyil.cuvis_measurement_get_capabilities(i_mesu, o_pCapabilities)

def cuvis_measurement_get_calib_id(i_mesu, o_pCalibId):
    return _cuvis_pyil.cuvis_measurement_get_calib_id(i_mesu, o_pCalibId)

def cuvis_calib_get_id(i_calib, o_pCalibId):
    return _cuvis_pyil.cuvis_calib_get_id(i_calib, o_pCalibId)

def cuvis_proc_cont_get_calib_id(i_procCont, o_pCalibId):
    return _cuvis_pyil.cuvis_proc_cont_get_calib_id(i_procCont, o_pCalibId)

def cuvis_worker_create(o_pWorker, worker_settings):
    return _cuvis_pyil.cuvis_worker_create(o_pWorker, worker_settings)

def cuvis_worker_free(io_pWorker):
    return _cuvis_pyil.cuvis_worker_free(io_pWorker)

def cuvis_worker_set_acq_cont(i_worker, i_acq_cont):
    return _cuvis_pyil.cuvis_worker_set_acq_cont(i_worker, i_acq_cont)

def cuvis_worker_set_proc_cont(i_worker, i_proc_cont):
    return _cuvis_pyil.cuvis_worker_set_proc_cont(i_worker, i_proc_cont)

def cuvis_worker_set_exporter(i_worker, i_exporter):
    return _cuvis_pyil.cuvis_worker_set_exporter(i_worker, i_exporter)

def cuvis_worker_set_viewer(i_worker, i_viewer):
    return _cuvis_pyil.cuvis_worker_set_viewer(i_worker, i_viewer)

def cuvis_worker_get_next_result(i_worker, o_pMesu, o_pView):
    return _cuvis_pyil.cuvis_worker_get_next_result(i_worker, o_pMesu, o_pView)

def cuvis_worker_has_next_result(i_worker, o_pHasNext):
    return _cuvis_pyil.cuvis_worker_has_next_result(i_worker, o_pHasNext)

def cuvis_worker_get_queue_limit(i_worker, o_pQueueLimit):
    return _cuvis_pyil.cuvis_worker_get_queue_limit(i_worker, o_pQueueLimit)

def cuvis_worker_get_queue_used(i_worker, o_pQueueUsed):
    return _cuvis_pyil.cuvis_worker_get_queue_used(i_worker, o_pQueueUsed)

def cuvis_worker_set_queue_limit(i_worker, i_QueueLimit):
    return _cuvis_pyil.cuvis_worker_set_queue_limit(i_worker, i_QueueLimit)

def cuvis_set_special(arg1):
    return _cuvis_pyil.cuvis_set_special(arg1)

def cuvis_imbuffer_allocate():
    return _cuvis_pyil.cuvis_imbuffer_allocate()

def cuvis_imbuffer_free(ptr):
    return _cuvis_pyil.cuvis_imbuffer_free(ptr)

def cuvis_gps_allocate():
    return _cuvis_pyil.cuvis_gps_allocate()

def cuvis_gps_free(ptr):
    return _cuvis_pyil.cuvis_gps_free(ptr)

def cuvis_sensor_info_allocate():
    return _cuvis_pyil.cuvis_sensor_info_allocate()

def cuvis_sensor_info_free(ptr):
    return _cuvis_pyil.cuvis_sensor_info_free(ptr)

def cuvis_session_info_allocate():
    return _cuvis_pyil.cuvis_session_info_allocate()

def cuvis_session_info_free(ptr):
    return _cuvis_pyil.cuvis_session_info_free(ptr)

def cuvis_mesu_metadata_allocate():
    return _cuvis_pyil.cuvis_mesu_metadata_allocate()

def cuvis_mesu_metadata_free(ptr):
    return _cuvis_pyil.cuvis_mesu_metadata_free(ptr)

def cuvis_save_args_allocate():
    return _cuvis_pyil.cuvis_save_args_allocate()

def cuvis_save_args_free(ptr):
    return _cuvis_pyil.cuvis_save_args_free(ptr)

def cuvis_proc_args_allocate():
    return _cuvis_pyil.cuvis_proc_args_allocate()

def cuvis_proc_args_free(ptr):
    return _cuvis_pyil.cuvis_proc_args_free(ptr)

def cuvis_export_general_settings_allocate():
    return _cuvis_pyil.cuvis_export_general_settings_allocate()

def cuvis_export_general_settings_free(ptr):
    return _cuvis_pyil.cuvis_export_general_settings_free(ptr)

def cuvis_export_cube_settings_allocate():
    return _cuvis_pyil.cuvis_export_cube_settings_allocate()

def cuvis_export_cube_settings_free(ptr):
    return _cuvis_pyil.cuvis_export_cube_settings_free(ptr)

def cuvis_export_view_settings_allocate():
    return _cuvis_pyil.cuvis_export_view_settings_allocate()

def cuvis_export_view_settings_free(ptr):
    return _cuvis_pyil.cuvis_export_view_settings_free(ptr)

def cuvis_export_tiff_settings_allocate():
    return _cuvis_pyil.cuvis_export_tiff_settings_allocate()

def cuvis_export_tiff_settings_free(ptr):
    return _cuvis_pyil.cuvis_export_tiff_settings_free(ptr)

def cuvis_viewer_settings_allocate():
    return _cuvis_pyil.cuvis_viewer_settings_allocate()

def cuvis_viewer_settings_free(ptr):
    return _cuvis_pyil.cuvis_viewer_settings_free(ptr)

def cuvis_view_data_allocate():
    return _cuvis_pyil.cuvis_view_data_allocate()

def cuvis_view_data_free(ptr):
    return _cuvis_pyil.cuvis_view_data_free(ptr)

def cuvis_cuvis_component_info_allocate():
    return _cuvis_pyil.cuvis_cuvis_component_info_allocate()

def cuvis_cuvis_component_info_free(ptr):
    return _cuvis_pyil.cuvis_cuvis_component_info_free(ptr)

def cuvis_worker_settings_allocate():
    return _cuvis_pyil.cuvis_worker_settings_allocate()

def cuvis_worker_settings_free(ptr):
    return _cuvis_pyil.cuvis_worker_settings_free(ptr)

def cuvis_acq_cont_fps_get(i_acqCont, o_pvalue):
    return _cuvis_pyil.cuvis_acq_cont_fps_get(i_acqCont, o_pvalue)

def cuvis_acq_cont_fps_set(i_acqCont, value):
    return _cuvis_pyil.cuvis_acq_cont_fps_set(i_acqCont, value)

def cuvis_acq_cont_fps_set_async(i_acqCont, o_pAsyncResult, value):
    return _cuvis_pyil.cuvis_acq_cont_fps_set_async(i_acqCont, o_pAsyncResult, value)

def cuvis_acq_cont_average_get(i_acqCont, o_pvalue):
    return _cuvis_pyil.cuvis_acq_cont_average_get(i_acqCont, o_pvalue)

def cuvis_acq_cont_average_set(i_acqCont, value):
    return _cuvis_pyil.cuvis_acq_cont_average_set(i_acqCont, value)

def cuvis_acq_cont_average_set_async(i_acqCont, o_pAsyncResult, value):
    return _cuvis_pyil.cuvis_acq_cont_average_set_async(i_acqCont, o_pAsyncResult, value)

def cuvis_acq_cont_integration_time_get(i_acqCont, o_pvalue):
    return _cuvis_pyil.cuvis_acq_cont_integration_time_get(i_acqCont, o_pvalue)

def cuvis_acq_cont_integration_time_set(i_acqCont, value):
    return _cuvis_pyil.cuvis_acq_cont_integration_time_set(i_acqCont, value)

def cuvis_acq_cont_integration_time_set_async(i_acqCont, o_pAsyncResult, value):
    return _cuvis_pyil.cuvis_acq_cont_integration_time_set_async(i_acqCont, o_pAsyncResult, value)

def cuvis_acq_cont_auto_exp_get(i_acqCont, o_pvalue):
    return _cuvis_pyil.cuvis_acq_cont_auto_exp_get(i_acqCont, o_pvalue)

def cuvis_acq_cont_auto_exp_set(i_acqCont, value):
    return _cuvis_pyil.cuvis_acq_cont_auto_exp_set(i_acqCont, value)

def cuvis_acq_cont_auto_exp_set_async(i_acqCont, o_pAsyncResult, value):
    return _cuvis_pyil.cuvis_acq_cont_auto_exp_set_async(i_acqCont, o_pAsyncResult, value)

def cuvis_acq_cont_preview_mode_get(i_acqCont, o_pvalue):
    return _cuvis_pyil.cuvis_acq_cont_preview_mode_get(i_acqCont, o_pvalue)

def cuvis_acq_cont_preview_mode_set(i_acqCont, value):
    return _cuvis_pyil.cuvis_acq_cont_preview_mode_set(i_acqCont, value)

def cuvis_acq_cont_preview_mode_set_async(i_acqCont, o_pAsyncResult, value):
    return _cuvis_pyil.cuvis_acq_cont_preview_mode_set_async(i_acqCont, o_pAsyncResult, value)

def cuvis_acq_cont_operation_mode_get(i_acqCont, o_pvalue):
    return _cuvis_pyil.cuvis_acq_cont_operation_mode_get(i_acqCont, o_pvalue)

def cuvis_acq_cont_operation_mode_set(i_acqCont, value):
    return _cuvis_pyil.cuvis_acq_cont_operation_mode_set(i_acqCont, value)

def cuvis_acq_cont_operation_mode_set_async(i_acqCont, o_pAsyncResult, value):
    return _cuvis_pyil.cuvis_acq_cont_operation_mode_set_async(i_acqCont, o_pAsyncResult, value)

def cuvis_acq_cont_continuous_set(i_acqCont, value):
    return _cuvis_pyil.cuvis_acq_cont_continuous_set(i_acqCont, value)

def cuvis_acq_cont_continuous_set_async(i_acqCont, o_pAsyncResult, value):
    return _cuvis_pyil.cuvis_acq_cont_continuous_set_async(i_acqCont, o_pAsyncResult, value)

def cuvis_acq_cont_bandwidth_get(i_acqCont, o_pvalue):
    return _cuvis_pyil.cuvis_acq_cont_bandwidth_get(i_acqCont, o_pvalue)

def cuvis_acq_cont_queue_size_get(i_acqCont, o_pvalue):
    return _cuvis_pyil.cuvis_acq_cont_queue_size_get(i_acqCont, o_pvalue)

def cuvis_acq_cont_queue_used_get(i_acqCont, o_pvalue):
    return _cuvis_pyil.cuvis_acq_cont_queue_used_get(i_acqCont, o_pvalue)

def cuvis_comp_online_get(i_acqCont, i_id, o_pvalue):
    return _cuvis_pyil.cuvis_comp_online_get(i_acqCont, i_id, o_pvalue)

def cuvis_comp_temperature_get(i_acqCont, i_id, o_pvalue):
    return _cuvis_pyil.cuvis_comp_temperature_get(i_acqCont, i_id, o_pvalue)

def cuvis_comp_bandwidth_get(i_acqCont, i_id, o_pvalue):
    return _cuvis_pyil.cuvis_comp_bandwidth_get(i_acqCont, i_id, o_pvalue)

def cuvis_comp_driver_queue_size_get(i_acqCont, i_id, o_pvalue):
    return _cuvis_pyil.cuvis_comp_driver_queue_size_get(i_acqCont, i_id, o_pvalue)

def cuvis_comp_driver_queue_used_get(i_acqCont, i_id, o_pvalue):
    return _cuvis_pyil.cuvis_comp_driver_queue_used_get(i_acqCont, i_id, o_pvalue)

def cuvis_comp_hardware_queue_size_get(i_acqCont, i_id, o_pvalue):
    return _cuvis_pyil.cuvis_comp_hardware_queue_size_get(i_acqCont, i_id, o_pvalue)

def cuvis_comp_hardware_queue_used_get(i_acqCont, i_id, o_pvalue):
    return _cuvis_pyil.cuvis_comp_hardware_queue_used_get(i_acqCont, i_id, o_pvalue)

def cuvis_comp_gain_get(i_acqCont, i_id, o_pvalue):
    return _cuvis_pyil.cuvis_comp_gain_get(i_acqCont, i_id, o_pvalue)

def cuvis_comp_gain_set(i_acqCont, i_id, value):
    return _cuvis_pyil.cuvis_comp_gain_set(i_acqCont, i_id, value)

def cuvis_comp_gain_set_async(i_acqCont, i_id, o_pAsyncResult, value):
    return _cuvis_pyil.cuvis_comp_gain_set_async(i_acqCont, i_id, o_pAsyncResult, value)

def cuvis_comp_integration_time_factor_get(i_acqCont, i_id, o_pvalue):
    return _cuvis_pyil.cuvis_comp_integration_time_factor_get(i_acqCont, i_id, o_pvalue)

def cuvis_comp_integration_time_factor_set(i_acqCont, i_id, value):
    return _cuvis_pyil.cuvis_comp_integration_time_factor_set(i_acqCont, i_id, value)

def cuvis_comp_integration_time_factor_set_async(i_acqCont, i_id, o_pAsyncResult, value):
    return _cuvis_pyil.cuvis_comp_integration_time_factor_set_async(i_acqCont, i_id, o_pAsyncResult, value)

def new_p_cuvis_data_type_t():
    return _cuvis_pyil.new_p_cuvis_data_type_t()

def copy_p_cuvis_data_type_t(value):
    return _cuvis_pyil.copy_p_cuvis_data_type_t(value)

def delete_p_cuvis_data_type_t(obj):
    return _cuvis_pyil.delete_p_cuvis_data_type_t(obj)

def p_cuvis_data_type_t_assign(obj, value):
    return _cuvis_pyil.p_cuvis_data_type_t_assign(obj, value)

def p_cuvis_data_type_t_value(obj):
    return _cuvis_pyil.p_cuvis_data_type_t_value(obj)

def new_p_cuvis_operation_mode_t():
    return _cuvis_pyil.new_p_cuvis_operation_mode_t()

def copy_p_cuvis_operation_mode_t(value):
    return _cuvis_pyil.copy_p_cuvis_operation_mode_t(value)

def delete_p_cuvis_operation_mode_t(obj):
    return _cuvis_pyil.delete_p_cuvis_operation_mode_t(obj)

def p_cuvis_operation_mode_t_assign(obj, value):
    return _cuvis_pyil.p_cuvis_operation_mode_t_assign(obj, value)

def p_cuvis_operation_mode_t_value(obj):
    return _cuvis_pyil.p_cuvis_operation_mode_t_value(obj)

def new_p_cuvis_hardware_state_t():
    return _cuvis_pyil.new_p_cuvis_hardware_state_t()

def copy_p_cuvis_hardware_state_t(value):
    return _cuvis_pyil.copy_p_cuvis_hardware_state_t(value)

def delete_p_cuvis_hardware_state_t(obj):
    return _cuvis_pyil.delete_p_cuvis_hardware_state_t(obj)

def p_cuvis_hardware_state_t_assign(obj, value):
    return _cuvis_pyil.p_cuvis_hardware_state_t_assign(obj, value)

def p_cuvis_hardware_state_t_value(obj):
    return _cuvis_pyil.p_cuvis_hardware_state_t_value(obj)


